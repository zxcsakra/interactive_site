// –≠–ª–µ–º–µ–Ω—Ç—ã DOM
const themeToggle = document.getElementById('themeToggle');
const themeIcon = document.getElementById('themeIcon');
const themeText = document.getElementById('themeText');
const editToggle = document.getElementById('editToggle');
const editPanel = document.getElementById('editPanel');
const contentArea = document.getElementById('contentArea');
const addCardBtn = document.getElementById('addCardBtn');
const updateCardBtn = document.getElementById('updateCardBtn');
const cancelEditBtn = document.getElementById('cancelEditBtn');
const cardTitle = document.getElementById('cardTitle');
const cardText = document.getElementById('cardText');
const cardImage = document.getElementById('cardImage');
const imagePreview = document.getElementById('imagePreview');
const imageModal = document.getElementById('imageModal');
const modalClose = document.getElementById('modalClose');
const modalImage = document.getElementById('modalImage');
const modalTitle = document.getElementById('modalTitle');
const modalDescription = document.getElementById('modalDescription');
const saveIndicator = document.getElementById('saveIndicator');
const exportDataBtn = document.getElementById('exportDataBtn');
const importDataBtn = document.getElementById('importDataBtn');
const importFile = document.getElementById('importFile');

// –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è
let isEditing = false;
let currentEditingCard = null;
let nextCardId = 1;
let saveTimeout = null;

// –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ä–µ–∂–∏–º (—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–ª–∏ –ø—Ä–æ—Å–º–æ—Ç—Ä)
const isViewMode = determineViewMode();

// –î–µ–º–æ-–¥–∞–Ω–Ω—ã–µ
const demoCards = [
    {
        title: "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –Ω–∞ –º–æ–π —Å–∞–π—Ç!",
        text: "–≠—Ç–æ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π —Å–∞–π—Ç —Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å—é —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞. –í—ã –º–æ–∂–µ—Ç–µ –¥–æ–±–∞–≤–ª—è—Ç—å –∫–∞—Ä—Ç–æ—á–∫–∏, –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏ –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç—å —Ç–µ–º—ã.",
        imageSrc: "https://images.unsplash.com/photo-1518709268805-4e9042af2176?ixlib=rb-1.2.1&auto=format&fit=crop&w=600&q=80"
    },
    {
        title: "–û –ø—Ä–æ–µ–∫—Ç–µ",
        text: "–≠—Ç–æ—Ç —Å–∞–π—Ç —Å–æ–∑–¥–∞–Ω —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º Jekyll –∏ GitHub Pages. –í—ã –º–æ–∂–µ—Ç–µ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –µ–≥–æ –≤–Ω–µ—à–Ω–∏–π –≤–∏–¥ –∏ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –ø–æ–¥ —Å–≤–æ–∏ –Ω—É–∂–¥—ã.",
        imageSrc: "https://images.unsplash.com/photo-1555066931-4365d14bab8c?ixlib=rb-1.2.1&auto=format&fit=crop&w=600&q=80"
    },
    {
        title: "–ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å",
        text: "–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤ –ø—Ä–∞–≤–æ–º –Ω–∏–∂–Ω–µ–º —É–≥–ª—É, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫—É —Å–∞–π—Ç–∞. –î–æ–±–∞–≤–ª—è–π—Ç–µ –∫–∞—Ä—Ç–æ—á–∫–∏, –∑–∞–≥—Ä—É–∂–∞–π—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏ —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∏—Ä—É–π—Ç–µ!",
        imageSrc: "https://images.unsplash.com/photo-1547658719-da2b51169166?ixlib=rb-1.2.1&auto=format&fit=crop&w=600&q=80"
    }
];

// –§—É–Ω–∫—Ü–∏—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ä–µ–∂–∏–º–∞
function determineViewMode() {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã URL
    const urlParams = new URLSearchParams(window.location.search);
    const mode = urlParams.get('mode');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ö–æ—Å—Ç (–µ—Å–ª–∏ –Ω–µ –ª–æ–∫–∞–ª—å–Ω—ã–π —Ö–æ—Å—Ç, —Ç–æ —Ä–µ–∂–∏–º –ø—Ä–æ—Å–º–æ—Ç—Ä–∞)
    const isLocalhost = window.location.hostname === 'localhost' || 
                        window.location.hostname === '127.0.0.1';
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    const isAdmin = localStorage.getItem('isAdmin') === 'true';
    const hasEditPassword = localStorage.getItem('editPassword') === 'true';
    
    // –†–µ–∂–∏–º –ø—Ä–æ—Å–º–æ—Ç—Ä–∞, –µ—Å–ª–∏:
    // 1. –Ø–≤–Ω–æ —É–∫–∞–∑–∞–Ω –ø–∞—Ä–∞–º–µ—Ç—Ä ?mode=view
    // 2. –ù–µ –ª–æ–∫–∞–ª—å–Ω—ã–π —Ö–æ—Å—Ç –ò –Ω–µ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞/–ø–∞—Ä–æ–ª—è
    // 3. –Ø–≤–Ω–æ —É–∫–∞–∑–∞–Ω –ø–∞—Ä–∞–º–µ—Ç—Ä ?mode=edit (–ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—ã–π —Ä–µ–∂–∏–º —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è)
    
    if (mode === 'edit') return false;
    if (mode === 'view') return true;
    if (!isLocalhost && !isAdmin && !hasEditPassword) return true;
    
    return false;
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener('DOMContentLoaded', () => {
    initializeApp();
});

function initializeApp() {
    if (isViewMode) {
        enableViewMode();
    } else {
        enableEditMode();
    }
    
    loadData();
    loadTheme();
    setupGlobalEventListeners();
}

// –í–∫–ª—é—á–µ–Ω–∏–µ —Ä–µ–∂–∏–º–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞
function enableViewMode() {
    document.body.classList.add('view-mode');
    
    // –°–æ–∑–¥–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä —Ä–µ–∂–∏–º–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞
    createViewModeIndicator();
    
    console.log('üîí –†–µ–∂–∏–º –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω');
}

// –í–∫–ª—é—á–µ–Ω–∏–µ —Ä–µ–∂–∏–º–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
function enableEditMode() {
    document.body.classList.remove('view-mode');
    
    // –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    setupEditEventListeners();
    
    console.log('‚úèÔ∏è –†–µ–∂–∏–º —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω');
}

// –°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞ —Ä–µ–∂–∏–º–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞
function createViewModeIndicator() {
    const indicator = document.createElement('div');
    indicator.className = 'view-mode-indicator';
    indicator.innerHTML = `
        <span>üîí –†–µ–∂–∏–º –ø—Ä–æ—Å–º–æ—Ç—Ä–∞</span>
        <button id="requestEditAccess">
            –ó–∞–ø—Ä–æ—Å–∏—Ç—å –¥–æ—Å—Ç—É–ø
        </button>
    `;
    document.body.appendChild(indicator);
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ –¥–æ—Å—Ç—É–ø–∞
    document.getElementById('requestEditAccess').addEventListener('click', () => {
        requestEditAccess();
    });
}

// –ó–∞–ø—Ä–æ—Å –¥–æ—Å—Ç—É–ø–∞ –∫ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—é
function requestEditAccess() {
    const password = prompt('–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—é:');
    
    // –ü—Ä–æ—Å—Ç–æ–π –ø–∞—Ä–æ–ª—å (–≤ —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –±–µ–∑–æ–ø–∞—Å–Ω—É—é –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é)
    if (password === 'edit2024') {
        localStorage.setItem('editPassword', 'true');
        alert('–î–æ—Å—Ç—É–ø —Ä–∞–∑—Ä–µ—à–µ–Ω! –°—Ç—Ä–∞–Ω–∏—Ü–∞ –±—É–¥–µ—Ç –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–µ–Ω–∞.');
        window.location.search = '?mode=edit';
    } else if (password) {
        alert('–ù–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å. –î–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: edit2024');
    }
}

// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π (—Ä–∞–±–æ—Ç–∞—é—Ç –≤ –æ–±–æ–∏—Ö —Ä–µ–∂–∏–º–∞—Ö)
function setupGlobalEventListeners() {
    // –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Ç–µ–º—ã (–¥–æ—Å—Ç—É–ø–Ω–æ –≤ –æ–±–æ–∏—Ö —Ä–µ–∂–∏–º–∞—Ö)
    themeToggle.addEventListener('click', () => {
        document.body.classList.toggle('dark-theme');
        
        if (document.body.classList.contains('dark-theme')) {
            themeIcon.textContent = '‚òÄÔ∏è';
            themeText.textContent = '–°–≤–µ—Ç–ª–∞—è —Ç–µ–º–∞';
            localStorage.setItem('theme', 'dark');
        } else {
            themeIcon.textContent = 'üåô';
            themeText.textContent = '–¢–µ–º–Ω–∞—è —Ç–µ–º–∞';
            localStorage.setItem('theme', 'light');
        }
        
        if (!isViewMode) {
            saveData();
        }
    });

    // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
    modalClose.addEventListener('click', () => {
        imageModal.style.display = 'none';
    });

    // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –ø—Ä–∏ –∫–ª–∏–∫–µ –≤–Ω–µ –µ–≥–æ
    imageModal.addEventListener('click', (e) => {
        if (e.target === imageModal) {
            imageModal.style.display = 'none';
        }
    });

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π (–¥–æ—Å—Ç—É–ø–Ω–æ –≤ –æ–±–æ–∏—Ö —Ä–µ–∂–∏–º–∞—Ö)
    contentArea.addEventListener('click', (e) => {
        // –û—Ç–∫—Ä—ã—Ç–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ –º–æ–¥–∞–ª—å–Ω–æ–º –æ–∫–Ω–µ
        if (e.target.classList.contains('card-image')) {
            const card = e.target.closest('.card');
            const title = card.querySelector('h2').textContent;
            const description = card.querySelector('p').textContent;
            const imageSrc = e.target.src;
            
            openImageModal(imageSrc, title, description);
        }
    });
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è (—Ç–æ–ª—å–∫–æ –¥–ª—è —Ä–µ–∂–∏–º–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è)
function setupEditEventListeners() {
    // –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Ä–µ–∂–∏–º–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    editToggle.addEventListener('click', () => {
        isEditing = !isEditing;
        document.body.classList.toggle('editing', isEditing);
        editPanel.classList.toggle('active', isEditing);
        
        // –î–æ–±–∞–≤–ª—è–µ–º –∏–ª–∏ —É–¥–∞–ª—è–µ–º –∫–ª–∞—Å—Å editable –¥–ª—è –∫–∞—Ä—Ç–æ—á–µ–∫
        document.querySelectorAll('.card').forEach(card => {
            card.classList.toggle('editable', isEditing);
        });
        
        // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–æ—Ä–º—É —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        resetEditForm();
    });

    // –ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    cardImage.addEventListener('change', function() {
        if (this.files && this.files[0]) {
            const reader = new FileReader();
            
            reader.onload = function(e) {
                imagePreview.src = e.target.result;
                imagePreview.style.display = 'block';
            }
            
            reader.readAsDataURL(this.files[0]);
        }
    });

    // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–π –∫–∞—Ä—Ç–æ—á–∫–∏
    addCardBtn.addEventListener('click', () => {
        const title = cardTitle.value.trim();
        const text = cardText.value.trim();
        const imageSrc = imagePreview.src || '';
        
        if (!title) {
            alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∑–∞–≥–æ–ª–æ–≤–æ–∫ –∫–∞—Ä—Ç–æ—á–∫–∏');
            return;
        }
        
        createCard(title, text, imageSrc);
        resetEditForm();
        saveData();
    });

    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π –∫–∞—Ä—Ç–æ—á–∫–∏
    updateCardBtn.addEventListener('click', () => {
        if (!currentEditingCard) return;
        
        const title = cardTitle.value.trim();
        const text = cardText.value.trim();
        const imageSrc = imagePreview.src || currentEditingCard.querySelector('.card-image')?.src || '';
        
        if (!title) {
            alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∑–∞–≥–æ–ª–æ–≤–æ–∫ –∫–∞—Ä—Ç–æ—á–∫–∏');
            return;
        }
        
        updateCard(currentEditingCard, title, text, imageSrc);
        resetEditForm();
        saveData();
    });

    // –û—Ç–º–µ–Ω–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    cancelEditBtn.addEventListener('click', resetEditForm);

    // –≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö
    exportDataBtn.addEventListener('click', () => {
        const data = getSiteData();
        const dataStr = JSON.stringify(data, null, 2);
        const dataBlob = new Blob([dataStr], {type: 'application/json'});
        
        const url = URL.createObjectURL(dataBlob);
        const a = document.createElement('a');
        a.href = url;
        a.download = 'site-data.json';
        document.body.appendChild(a);
        a.click();
        document.body.removeChild(a);
        URL.revokeObjectURL(url);
        
        showSaveIndicator('–î–∞–Ω–Ω—ã–µ —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã!');
    });

    // –ò–º–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö
    importDataBtn.addEventListener('click', () => {
        importFile.click();
    });

    importFile.addEventListener('change', function(e) {
        if (this.files && this.files[0]) {
            const reader = new FileReader();
            
            reader.onload = function(e) {
                try {
                    const data = JSON.parse(e.target.result);
                    loadSiteData(data);
                    showSaveIndicator('–î–∞–Ω–Ω—ã–µ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã!');
                } catch (error) {
                    alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–º–ø–æ—Ä—Ç–µ –¥–∞–Ω–Ω—ã—Ö: –Ω–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Ñ–∞–π–ª–∞');
                }
            }
            
            reader.readAsText(this.files[0]);
            this.value = ''; // –°–±—Ä–æ—Å –∑–Ω–∞—á–µ–Ω–∏—è input
        }
    });

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∫–∞—Ä—Ç–æ—á–µ–∫
    contentArea.addEventListener('click', (e) => {
        if (isViewMode) return;
        
        // –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–∞—Ä—Ç–æ—á–∫–∏
        if (e.target.classList.contains('edit-card')) {
            const card = e.target.closest('.card');
            editCard(card);
        }
        
        // –£–¥–∞–ª–µ–Ω–∏–µ –∫–∞—Ä—Ç–æ—á–∫–∏
        if (e.target.classList.contains('delete-card')) {
            const card = e.target.closest('.card');
            if (confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —ç—Ç—É –∫–∞—Ä—Ç–æ—á–∫—É?')) {
                card.remove();
                saveData();
            }
        }
    });
}

// –§—É–Ω–∫—Ü–∏–∏
function createCard(title, text, imageSrc) {
    const card = document.createElement('div');
    card.className = 'card';
    card.dataset.id = nextCardId++;
    
    const actionsHtml = !isViewMode ? `
        <div class="card-actions">
            <button class="card-action-btn edit-card" title="–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å">‚úèÔ∏è</button>
            <button class="card-action-btn delete-card" title="–£–¥–∞–ª–∏—Ç—å">üóëÔ∏è</button>
        </div>
    ` : '';
    
    card.innerHTML = `
        <h2>${title}</h2>
        <p>${text}</p>
        ${imageSrc ? `<img src="${imageSrc}" alt="${title}" class="card-image">` : ''}
        ${actionsHtml}
    `;
    
    contentArea.appendChild(card);
    
    // –î–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞—Å—Å editable, –µ—Å–ª–∏ –º—ã –≤ —Ä–µ–∂–∏–º–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    if (isEditing && !isViewMode) {
        card.classList.add('editable');
    }
}

function editCard(card) {
    if (isViewMode) return;
    
    currentEditingCard = card;
    
    const title = card.querySelector('h2').textContent;
    const text = card.querySelector('p').textContent;
    const image = card.querySelector('.card-image');
    const imageSrc = image ? image.src : '';
    
    cardTitle.value = title;
    cardText.value = text;
    
    if (imageSrc) {
        imagePreview.src = imageSrc;
        imagePreview.style.display = 'block';
    } else {
        imagePreview.style.display = 'none';
    }
    
    addCardBtn.style.display = 'none';
    updateCardBtn.style.display = 'inline-block';
    cancelEditBtn.style.display = 'inline-block';
}

function updateCard(card, title, text, imageSrc) {
    card.querySelector('h2').textContent = title;
    card.querySelector('p').textContent = text;
    
    let image = card.querySelector('.card-image');
    if (imageSrc) {
        if (image) {
            image.src = imageSrc;
            image.alt = title;
        } else {
            image = document.createElement('img');
            image.className = 'card-image';
            image.src = imageSrc;
            image.alt = title;
            card.querySelector('p').after(image);
        }
    } else if (image) {
        image.remove();
    }
    
    currentEditingCard = null;
}

function resetEditForm() {
    cardTitle.value = '';
    cardText.value = '';
    cardImage.value = '';
    imagePreview.style.display = 'none';
    
    addCardBtn.style.display = 'inline-block';
    updateCardBtn.style.display = 'none';
    cancelEditBtn.style.display = 'none';
    
    currentEditingCard = null;
}

function openImageModal(imageSrc, title, description) {
    modalImage.src = imageSrc;
    modalTitle.textContent = title;
    modalDescription.textContent = description;
    imageModal.style.display = 'flex';
}

// –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –≤ localStorage
function saveData() {
    if (isViewMode) return;
    
    const data = getSiteData();
    localStorage.setItem('siteData', JSON.stringify(data));
    
    // –û—Ç–ª–æ–∂–µ–Ω–Ω–æ–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ
    if (saveTimeout) clearTimeout(saveTimeout);
    saveTimeout = setTimeout(() => {
        showSaveIndicator('–î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã!');
    }, 500);
}

// –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∏–∑ localStorage
function loadData() {
    const savedData = localStorage.getItem('siteData');
    if (savedData) {
        try {
            const data = JSON.parse(savedData);
            loadSiteData(data);
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö:', error);
            createDemoCards();
        }
    } else {
        createDemoCards();
    }
}

// –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö —Å–∞–π—Ç–∞
function getSiteData() {
    const cards = [];
    document.querySelectorAll('.card').forEach(card => {
        const title = card.querySelector('h2').textContent;
        const text = card.querySelector('p').textContent;
        const image = card.querySelector('.card-image');
        const imageSrc = image ? image.src : '';
        
        cards.push({
            title,
            text,
            imageSrc
        });
    });
    
    return {
        cards,
        nextCardId,
        theme: document.body.classList.contains('dark-theme') ? 'dark' : 'light'
    };
}

// –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö —Å–∞–π—Ç–∞
function loadSiteData(data) {
    // –û—á–∏—â–∞–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç
    contentArea.innerHTML = '';
    nextCardId = 1;
    
    // –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–∞—Ä—Ç–æ—á–∫–∏
    if (data.cards && data.cards.length > 0) {
        data.cards.forEach(cardData => {
            createCard(cardData.title, cardData.text, cardData.imageSrc);
        });
    }
    
    // –û–±–Ω–æ–≤–ª—è–µ–º nextCardId
    if (data.nextCardId) {
        nextCardId = data.nextCardId;
    }
}

// –°–æ–∑–¥–∞–Ω–∏–µ –¥–µ–º–æ-–∫–∞—Ä—Ç–æ—á–µ–∫
function createDemoCards() {
    demoCards.forEach(card => {
        createCard(card.title, card.text, card.imageSrc);
    });
}

// –ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
function showSaveIndicator(message) {
    if (isViewMode) return;
    
    saveIndicator.textContent = message;
    saveIndicator.classList.add('show');
    
    setTimeout(() => {
        saveIndicator.classList.remove('show');
    }, 3000);
}

// –ó–∞–≥—Ä—É–∑–∫–∞ —Ç–µ–º—ã –∏–∑ localStorage
function loadTheme() {
    const savedTheme = localStorage.getItem('theme');
    if (savedTheme === 'dark') {
        document.body.classList.add('dark-theme');
        themeIcon.textContent = '‚òÄÔ∏è';
        themeText.textContent = '–°–≤–µ—Ç–ª–∞—è —Ç–µ–º–∞';
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Ä–µ–∂–∏–º–∞ (–¥–ª—è –æ—Ç–ª–∞–¥–∫–∏)
window.toggleViewMode = function() {
    if (isViewMode) {
        localStorage.setItem('editPassword', 'true');
        window.location.search = '?mode=edit';
    } else {
        window.location.search = '?mode=view';
    }
};
