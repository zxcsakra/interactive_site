// –≠–ª–µ–º–µ–Ω—Ç—ã DOM
const themeToggle = document.getElementById('themeToggle');
const themeIcon = document.getElementById('themeIcon');
const themeText = document.getElementById('themeText');
const editToggle = document.getElementById('editToggle');
const editPanel = document.getElementById('editPanel');
const contentArea = document.getElementById('contentArea');
const addCardBtn = document.getElementById('addCardBtn');
const updateCardBtn = document.getElementById('updateCardBtn');
const cancelEditBtn = document.getElementById('cancelEditBtn');
const cardTitle = document.getElementById('cardTitle');
const cardText = document.getElementById('cardText');
const cardImage = document.getElementById('cardImage');
const imagePreview = document.getElementById('imagePreview');
const imageModal = document.getElementById('imageModal');
const modalClose = document.getElementById('modalClose');
const modalImage = document.getElementById('modalImage');
const modalTitle = document.getElementById('modalTitle');
const modalDescription = document.getElementById('modalDescription');
const saveIndicator = document.getElementById('saveIndicator');
const exportDataBtn = document.getElementById('exportDataBtn');
const importDataBtn = document.getElementById('importDataBtn');
const importFile = document.getElementById('importFile');

// –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è
let isEditing = false;
let currentEditingCard = null;
let nextCardId = 1;
let saveTimeout = null;

// –î–µ–º–æ-–¥–∞–Ω–Ω—ã–µ
const demoCards = [
    {
        title: "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!",
        text: "–≠—Ç–æ –ø—Ä–∏–º–µ—Ä –∫–∞—Ä—Ç–æ—á–∫–∏. –í—ã –º–æ–∂–µ—Ç–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ, –¥–æ–±–∞–≤–ª—è—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏ –∏–∑–º–µ–Ω—è—Ç—å –≤–Ω–µ—à–Ω–∏–π –≤–∏–¥ —Å–∞–π—Ç–∞.",
        imageSrc: "https://images.unsplash.com/photo-1518709268805-4e9042af2176?ixlib=rb-1.2.1&auto=format&fit=crop&w=600&q=80"
    },
    {
        title: "–û –ø—Ä–æ–µ–∫—Ç–µ",
        text: "–≠—Ç–æ—Ç —Å–∞–π—Ç –ø–æ–∑–≤–æ–ª—è–µ—Ç –≤–∞–º –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞—Ç—å –µ–≥–æ –≤–Ω–µ—à–Ω–∏–π –≤–∏–¥ –∏ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫—É —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤ –ø—Ä–∞–≤–æ–º –Ω–∏–∂–Ω–µ–º —É–≥–ª—É, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å.",
        imageSrc: "https://images.unsplash.com/photo-1555066931-4365d14bab8c?ixlib=rb-1.2.1&auto=format&fit=crop&w=600&q=80"
    }
];

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener('DOMContentLoaded', () => {
    loadData();
    loadTheme();
});

// –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Ç–µ–º—ã
themeToggle.addEventListener('click', () => {
    document.body.classList.toggle('dark-theme');
    
    if (document.body.classList.contains('dark-theme')) {
        themeIcon.textContent = '‚òÄÔ∏è';
        themeText.textContent = '–°–≤–µ—Ç–ª–∞—è —Ç–µ–º–∞';
        localStorage.setItem('theme', 'dark');
    } else {
        themeIcon.textContent = 'üåô';
        themeText.textContent = '–¢–µ–º–Ω–∞—è —Ç–µ–º–∞';
        localStorage.setItem('theme', 'light');
    }
    
    saveData();
});

// –ó–∞–≥—Ä—É–∑–∫–∞ —Ç–µ–º—ã –∏–∑ localStorage
function loadTheme() {
    const savedTheme = localStorage.getItem('theme');
    if (savedTheme === 'dark') {
        document.body.classList.add('dark-theme');
        themeIcon.textContent = '‚òÄÔ∏è';
        themeText.textContent = '–°–≤–µ—Ç–ª–∞—è —Ç–µ–º–∞';
    }
}

// –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Ä–µ–∂–∏–º–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
editToggle.addEventListener('click', () => {
    isEditing = !isEditing;
    document.body.classList.toggle('editing', isEditing);
    editPanel.classList.toggle('active', isEditing);
    
    // –î–æ–±–∞–≤–ª—è–µ–º –∏–ª–∏ —É–¥–∞–ª—è–µ–º –∫–ª–∞—Å—Å editable –¥–ª—è –∫–∞—Ä—Ç–æ—á–µ–∫
    document.querySelectorAll('.card').forEach(card => {
        card.classList.toggle('editable', isEditing);
    });
    
    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–æ—Ä–º—É —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    resetEditForm();
});

// –ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
cardImage.addEventListener('change', function() {
    if (this.files && this.files[0]) {
        const reader = new FileReader();
        
        reader.onload = function(e) {
            imagePreview.src = e.target.result;
            imagePreview.style.display = 'block';
        }
        
        reader.readAsDataURL(this.files[0]);
    }
});

// –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–π –∫–∞—Ä—Ç–æ—á–∫–∏
addCardBtn.addEventListener('click', () => {
    const title = cardTitle.value.trim();
    const text = cardText.value.trim();
    const imageSrc = imagePreview.src || '';
    
    if (!title) {
        alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∑–∞–≥–æ–ª–æ–≤–æ–∫ –∫–∞—Ä—Ç–æ—á–∫–∏');
        return;
    }
    
    createCard(title, text, imageSrc);
    resetEditForm();
    saveData();
});

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π –∫–∞—Ä—Ç–æ—á–∫–∏
updateCardBtn.addEventListener('click', () => {
    if (!currentEditingCard) return;
    
    const title = cardTitle.value.trim();
    const text = cardText.value.trim();
    const imageSrc = imagePreview.src || currentEditingCard.querySelector('.card-image')?.src || '';
    
    if (!title) {
        alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∑–∞–≥–æ–ª–æ–≤–æ–∫ –∫–∞—Ä—Ç–æ—á–∫–∏');
        return;
    }
    
    updateCard(currentEditingCard, title, text, imageSrc);
    resetEditForm();
    saveData();
});

// –û—Ç–º–µ–Ω–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
cancelEditBtn.addEventListener('click', resetEditForm);

// –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
modalClose.addEventListener('click', () => {
    imageModal.style.display = 'none';
});

// –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –ø—Ä–∏ –∫–ª–∏–∫–µ –≤–Ω–µ –µ–≥–æ
imageModal.addEventListener('click', (e) => {
    if (e.target === imageModal) {
        imageModal.style.display = 'none';
    }
});

// –≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö
exportDataBtn.addEventListener('click', () => {
    const data = getSiteData();
    const dataStr = JSON.stringify(data, null, 2);
    const dataBlob = new Blob([dataStr], {type: 'application/json'});
    
    const url = URL.createObjectURL(dataBlob);
    const a = document.createElement('a');
    a.href = url;
    a.download = 'site-data.json';
    document.body.appendChild(a);
    a.click();
    document.body.removeChild(a);
    URL.revokeObjectURL(url);
    
    showSaveIndicator('–î–∞–Ω–Ω—ã–µ —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã!');
});

// –ò–º–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö
importDataBtn.addEventListener('click', () => {
    importFile.click();
});

importFile.addEventListener('change', function(e) {
    if (this.files && this.files[0]) {
        const reader = new FileReader();
        
        reader.onload = function(e) {
            try {
                const data = JSON.parse(e.target.result);
                loadSiteData(data);
                showSaveIndicator('–î–∞–Ω–Ω—ã–µ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã!');
            } catch (error) {
                alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–º–ø–æ—Ä—Ç–µ –¥–∞–Ω–Ω—ã—Ö: –Ω–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Ñ–∞–π–ª–∞');
            }
        }
        
        reader.readAsText(this.files[0]);
        this.value = ''; // –°–±—Ä–æ—Å –∑–Ω–∞—á–µ–Ω–∏—è input
    }
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π –¥–ª—è –∫–∞—Ä—Ç–æ—á–µ–∫ (–¥–µ–ª–µ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ)
contentArea.addEventListener('click', (e) => {
    // –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–∞—Ä—Ç–æ—á–∫–∏
    if (e.target.classList.contains('edit-card')) {
        const card = e.target.closest('.card');
        editCard(card);
    }
    
    // –£–¥–∞–ª–µ–Ω–∏–µ –∫–∞—Ä—Ç–æ—á–∫–∏
    if (e.target.classList.contains('delete-card')) {
        const card = e.target.closest('.card');
        if (confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —ç—Ç—É –∫–∞—Ä—Ç–æ—á–∫—É?')) {
            card.remove();
            saveData();
        }
    }
    
    // –û—Ç–∫—Ä—ã—Ç–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ –º–æ–¥–∞–ª—å–Ω–æ–º –æ–∫–Ω–µ
    if (e.target.classList.contains('card-image')) {
        const card = e.target.closest('.card');
        const title = card.querySelector('h2').textContent;
        const description = card.querySelector('p').textContent;
        const imageSrc = e.target.src;
        
        openImageModal(imageSrc, title, description);
    }
});

// –§—É–Ω–∫—Ü–∏–∏
function createCard(title, text, imageSrc) {
    const card = document.createElement('div');
    card.className = 'card';
    card.dataset.id = nextCardId++;
    
    card.innerHTML = `
        <h2>${title}</h2>
        <p>${text}</p>
        ${imageSrc ? `<img src="${imageSrc}" alt="${title}" class="card-image">` : ''}
        <div class="card-actions">
            <button class="card-action-btn edit-card">‚úèÔ∏è</button>
            <button class="card-action-btn delete-card">üóëÔ∏è</button>
        </div>
    `;
    
    contentArea.appendChild(card);
    
    // –î–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞—Å—Å editable, –µ—Å–ª–∏ –º—ã –≤ —Ä–µ–∂–∏–º–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    if (isEditing) {
        card.classList.add('editable');
    }
}

function editCard(card) {
    currentEditingCard = card;
    
    const title = card.querySelector('h2').textContent;
    const text = card.querySelector('p').textContent;
    const image = card.querySelector('.card-image');
    const imageSrc = image ? image.src : '';
    
    cardTitle.value = title;
    cardText.value = text;
    
    if (imageSrc) {
        imagePreview.src = imageSrc;
        imagePreview.style.display = 'block';
    } else {
        imagePreview.style.display = 'none';
    }
    
    addCardBtn.style.display = 'none';
    updateCardBtn.style.display = 'inline-block';
    cancelEditBtn.style.display = 'inline-block';
}

function updateCard(card, title, text, imageSrc) {
    card.querySelector('h2').textContent = title;
    card.querySelector('p').textContent = text;
    
    let image = card.querySelector('.card-image');
    if (imageSrc) {
        if (image) {
            image.src = imageSrc;
            image.alt = title;
        } else {
            image = document.createElement('img');
            image.className = 'card-image';
            image.src = imageSrc;
            image.alt = title;
            card.querySelector('p').after(image);
        }
    } else if (image) {
        image.remove();
    }
    
    currentEditingCard = null;
}

function resetEditForm() {
    cardTitle.value = '';
    cardText.value = '';
    cardImage.value = '';
    imagePreview.style.display = 'none';
    
    addCardBtn.style.display = 'inline-block';
    updateCardBtn.style.display = 'none';
    cancelEditBtn.style.display = 'none';
    
    currentEditingCard = null;
}

function openImageModal(imageSrc, title, description) {
    modalImage.src = imageSrc;
    modalTitle.textContent = title;
    modalDescription.textContent = description;
    imageModal.style.display = 'flex';
}

// –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –≤ localStorage
function saveData() {
    const data = getSiteData();
    localStorage.setItem('siteData', JSON.stringify(data));
    
    // –û—Ç–ª–æ–∂–µ–Ω–Ω–æ–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ
    if (saveTimeout) clearTimeout(saveTimeout);
    saveTimeout = setTimeout(() => {
        showSaveIndicator('–î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã!');
    }, 500);
}

// –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∏–∑ localStorage
function loadData() {
    const savedData = localStorage.getItem('siteData');
    if (savedData) {
        try {
            const data = JSON.parse(savedData);
            loadSiteData(data);
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö:', error);
            createDemoCards();
        }
    } else {
        createDemoCards();
    }
}

// –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö —Å–∞–π—Ç–∞
function getSiteData() {
    const cards = [];
    document.querySelectorAll('.card').forEach(card => {
        const title = card.querySelector('h2').textContent;
        const text = card.querySelector('p').textContent;
        const image = card.querySelector('.card-image');
        const imageSrc = image ? image.src : '';
        
        cards.push({
            title,
            text,
            imageSrc
        });
    });
    
    return {
        cards,
        nextCardId,
        theme: document.body.classList.contains('dark-theme') ? 'dark' : 'light'
    };
}

// –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö —Å–∞–π—Ç–∞
function loadSiteData(data) {
    // –û—á–∏—â–∞–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç
    contentArea.innerHTML = '';
    nextCardId = 1;
    
    // –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–∞—Ä—Ç–æ—á–∫–∏
    if (data.cards && data.cards.length > 0) {
        data.cards.forEach(cardData => {
            createCard(cardData.title, cardData.text, cardData.imageSrc);
        });
    }
    
    // –û–±–Ω–æ–≤–ª—è–µ–º nextCardId
    if (data.nextCardId) {
        nextCardId = data.nextCardId;
    }
}

// –°–æ–∑–¥–∞–Ω–∏–µ –¥–µ–º–æ-–∫–∞—Ä—Ç–æ—á–µ–∫
function createDemoCards() {
    demoCards.forEach(card => {
        createCard(card.title, card.text, card.imageSrc);
    });
}

// –ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
function showSaveIndicator(message) {
    saveIndicator.textContent = message;
    saveIndicator.classList.add('show');
    
    setTimeout(() => {
        saveIndicator.classList.remove('show');
    }, 3000);
}
